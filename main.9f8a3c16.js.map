{"version":3,"sources":["scripts/main.js"],"names":["fieldGame","rowsGame","document","querySelectorAll","startBtn","querySelector","score","messageStart","messageWin","messageLose","scoreValue","addEventListener","resetGame","addNumber","checkGameOver","e","classList","contains","key","sortFieldGame","rotateFieldGame","rotateFieldGame2","updateGame","row","col","children","innerHTML","className","fieldsKey","push","length","randomItem","Math","floor","random","randomItemRow","randomItemCol","sortRow","arr","flip","filtered","reverse","sortZero","i","remove","countZero","some","el","count","j","map","resArr","filter","concat","Array","fill","val","index","textContent","add"],"mappings":"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","file":"main.9f8a3c16.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\nlet fieldGame = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nconst rowsGame = document.querySelectorAll('.field-row');\nconst startBtn = document.querySelector('button.start');\nconst score = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nlet scoreValue = 0;\n\nstartBtn.addEventListener('click', () => {\n  resetGame();\n  addNumber();\n  addNumber();\n});\n\nscore.addEventListener('click', () => {\n  checkGameOver();\n});\n\ndocument.addEventListener('keydown', e => {\n  if (\n    !messageStart.classList.contains('hidden')\n    || !messageWin.classList.contains('hidden')\n    || !messageLose.classList.contains('hidden')\n  ) {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      sortFieldGame();\n      break;\n\n    case 'ArrowRight':\n      sortFieldGame(true);\n      break;\n\n    case 'ArrowUp':\n      rotateFieldGame();\n      sortFieldGame(true);\n      rotateFieldGame2();\n      break;\n\n    case 'ArrowDown':\n      rotateFieldGame();\n      sortFieldGame();\n      rotateFieldGame2();\n      break;\n  }\n  addNumber();\n  updateGame();\n  checkGameOver();\n});\n\nconst updateGame = () => {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (fieldGame[row][col] > 0) {\n        rowsGame[row].children[col].innerHTML = fieldGame[row][col];\n\n        rowsGame[row].children[col].className = `\n        field-cell field-cell--${fieldGame[row][col]}`;\n      } else {\n        rowsGame[row].children[col].innerHTML = '';\n        rowsGame[row].children[col].className = `field-cell`;\n      }\n    }\n  }\n\n  score.innerHTML = scoreValue;\n};\n\nconst addNumber = () => {\n  const fieldsKey = [];\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (fieldGame[row][col] === 0) {\n        fieldsKey.push([row, col]);\n      }\n    }\n  }\n\n  if (fieldsKey.length === 0) {\n    return;\n  }\n\n  const randomItem = fieldsKey[Math.floor(Math.random() * fieldsKey.length)];\n\n  const randomItemRow = randomItem[0];\n  const randomItemCol = randomItem[1];\n\n  fieldGame[randomItemRow][randomItemCol] = Math.random() <= 0.1 ? 4 : 2;\n  updateGame();\n};\n\nconst sortRow = (arr, flip = false) => {\n  let filtered = !flip ? arr : arr.reverse();\n\n  filtered = sortZero(filtered);\n\n  for (let i = 0; i < 3; i++) {\n    if (filtered[i] > 0 && filtered[i] === filtered[i + 1]) {\n      filtered[i] = filtered[i] * 2;\n\n      if (filtered[i] === 2048) {\n        messageWin.classList.remove('hidden');\n      }\n\n      filtered[i + 1] = 0;\n      scoreValue += filtered[i];\n    }\n  }\n\n  filtered = sortZero(filtered);\n\n  return !flip ? filtered : filtered.reverse();\n};\n\nconst checkGameOver = () => {\n  const countZero = fieldGame.some(arr => arr.some(el => el === 0));\n\n  if (countZero) {\n    return;\n  }\n\n  let count = false;\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (fieldGame[i][j] === fieldGame[i][j + 1]\n        || fieldGame[j][i] === fieldGame[j + 1][i]) {\n        count = true;\n      }\n    }\n  }\n\n  if (!count) {\n    messageLose.classList.remove('hidden');\n  }\n};\n\nconst sortFieldGame = flip => {\n  fieldGame.map((row, i) => {\n    fieldGame[i] = sortRow(row, flip);\n  });\n};\n\nconst sortZero = arr => {\n  const resArr = arr.filter(el => el !== 0);\n\n  return resArr.concat(Array(arr.length - resArr.length).fill(0));\n};\n\nconst rotateFieldGame = () => {\n  fieldGame = fieldGame[0].map((val, index) =>\n    fieldGame.map(row => row[index]).reverse()\n  );\n};\n\nconst rotateFieldGame2 = () => {\n  for (let i = 0; i < 3; i++) {\n    rotateFieldGame();\n  }\n};\n\nconst resetGame = () => {\n  fieldGame = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  scoreValue = 0;\n  startBtn.textContent = 'Reset';\n  startBtn.className = 'button restart';\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  updateGame();\n};\n"]}